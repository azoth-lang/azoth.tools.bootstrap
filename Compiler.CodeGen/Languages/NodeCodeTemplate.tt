<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Azoth.Tools.Bootstrap.Compiler.CodeGen.Core" #>
<#  foreach(var usingNamespace in Build.OrderedNamespaces(grammar)) { #>
using <#=usingNamespace #>;
<#  } #>

namespace <#=grammar.Namespace #>;

// ReSharper disable MemberHidesStaticFromOuterClass

public sealed partial class <#=language.Name #>
{
<#  foreach(var rule in grammar.Rules.Where(ShouldEmit.Class)) {#>
    private sealed class <#=Emit.ClassName(rule) #> : Node, <#= Emit.TypeName(rule.Defines) #>
    {
<#      foreach (var property in rule.AllProperties) { #>
        public <#=Emit.Type(property.Type) #> <#=property.Name #> { get; }
<#      } #>

        public <#=Emit.ClassName(language, rule.Defines) #>(<#=Emit.PropertyClassParameters(rule) #>)
        {
<#          foreach(var property in rule.AllProperties) { #>
            <#=property.Name #> = <#=property.Name.ToCamelCase() #>;
<#          } #>
        }
    }

<#  } #>
}
