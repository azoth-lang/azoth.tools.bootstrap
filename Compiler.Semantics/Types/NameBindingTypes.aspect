◊namespace Azoth.Tools.Bootstrap.Compiler.Semantics.Types;
◊name NameBindingTypesAspect;
◊using Azoth.Tools.Bootstrap.Compiler.Core.Diagnostics;
◊using Azoth.Tools.Bootstrap.Compiler.Types.Decorated;
◊using Azoth.Tools.Bootstrap.Compiler.Types.Flow;

// ↓ ⟳ ↑ ⮡ ↗↖ →*← ✎

struct `ParameterType`;
struct `SelfParameterType`;

// ---------- Bindings
↑ Binding.BindingType: `IMaybeType`;
↑ NamedBinding.BindingType: `IMaybeNonVoidType`;

// ---------- Member Definitions
↑ FieldDefinition.BindingType: `IMaybeNonVoidType`;

// ---------- Parameters
↑ Parameter.BindingType: `IMaybeType`;
↑ ConstructorOrInitializerParameter.BindingType: `IMaybeNonVoidType`;
↑ ConstructorOrInitializerParameter.ParameterType: `IMaybeParameterType`;
= NamedParameter.↑.Diagnostics;
↑ SelfParameter.ParameterType:`IMaybeNonVoidType`;
= SelfParameter.ParameterType;
↑ ConstructorSelfParameter.BindingType: `CapabilityType`;
= ConstructorSelfParameter.↑.Diagnostics;
↑ InitializerSelfParameter.BindingType: `CapabilityType`;
= InitializerSelfParameter.↑.Diagnostics;
= MethodSelfParameter.↑.Diagnostics;

// ---------- Statements
= VariableDeclarationStatement.FlowStateAfter;

// ---------- Patterns
↓ Pattern.ContextBindingType(): `IMaybeNonVoidType`;
= BindingContextPattern.Pattern.ContextBindingType();
= BindingPattern.FlowStateAfter;
= OptionalPattern.Pattern.ContextBindingType();

// ---------- Operator Expressions
= PatternMatchExpression.Pattern.ContextBindingType();
