◊namespace Azoth.Tools.Bootstrap.Compiler.Semantics.Types;
◊name ForeachExpressionTypesAspect;
◊using Azoth.Tools.Bootstrap.Compiler.Core.Diagnostics;
◊using Azoth.Tools.Bootstrap.Compiler.Types.Decorated;
◊using Azoth.Tools.Bootstrap.Compiler.Types.Flow;

// ↓ ⟳ ↑ ⮡ ↗↖ →*← ✎

// ---------- Control Flow Expressions
/// The type that `.iterate()` is called on if it is called
↑ ForeachExpression.IterableType: `IMaybeNonVoidType`;
↑ ForeachExpression.IterateContextualizedCall: `ContextualizedCall`?;
/// The type that `.next()` is called on. May be the same as `IterableType`.
↑ ForeachExpression.IteratorType: `IMaybeNonVoidType`;
/// The type of value being looped over as determined by the return type of `.next()`
↑ ForeachExpression.IteratedType: `IMaybeNonVoidType`;
↑ ForeachExpression.FlowStateBeforeBlock: `IFlowState`;
= ForeachExpression.Type;
= ForeachExpression.Block.**.FlowStateBefore => FlowStateBeforeBlock;
= ForeachExpression.FlowStateAfter;
= ForeachExpression.↑.Diagnostics;
