◊namespace Azoth.Tools.Bootstrap.Compiler.Semantics.Types;
◊name TypeMemberDeclarationsAspect;
◊using Azoth.Tools.Bootstrap.Compiler.Core.Diagnostics;
◊using Azoth.Tools.Bootstrap.Compiler.Semantics.Types.Flow;
◊using Azoth.Tools.Bootstrap.Compiler.Types;

// ↓ ⟳ ↑ ⮡ ↗↖ →*← ✎

// ---------- Definitions
↑ ConcreteInvocableDefinition.FlowStateBefore(): `IFlowState`;
= ConcreteInvocableDefinition.FlowStateBefore();
= ConcreteFunctionInvocableDefinition.Type;

// ---------- Member Definitions
= MethodDefinition.↑.Diagnostics;
= AbstractMethodDefinition.MethodGroupType => Symbol.MethodGroupType;

= ConcreteMethodDefinition.SelfParameter.**.FlowStateBefore() => Self.FlowStateBefore();
= ConcreteMethodDefinition.Parameters[0].**.FlowStateBefore()
    => SelfParameter.FlowStateAfter;
= ConcreteMethodDefinition.Parameters[index].**.FlowStateBefore()
    => Parameters[index - 1].FlowStateAfter;
= ConcreteMethodDefinition.Body.**.FlowStateBefore()
    => Parameters.LastOrDefault()?.FlowStateAfter ?? SelfParameter.FlowStateAfter;
= ConcreteMethodDefinition.Body.**.ExpectedReturnType => Return?.NamedType ?? DataType.Void;

= StandardMethodDefinition.MethodGroupType => Symbol.MethodGroupType;
= StandardMethodDefinition.Body.**.ExpectedType => Self.MethodGroupType.Return.Type;

= SourceConstructorDefinition.SelfParameter.**.FlowStateBefore() => Self.FlowStateBefore();
= SourceConstructorDefinition.Parameters[0].**.FlowStateBefore()
    => SelfParameter.FlowStateAfter;
= SourceConstructorDefinition.Parameters[index].**.FlowStateBefore()
    => Parameters[index - 1].FlowStateAfter;
= SourceConstructorDefinition.Body.**.FlowStateBefore()
    => Parameters.LastOrDefault()?.FlowStateAfter ?? SelfParameter.FlowStateAfter;
= SourceConstructorDefinition.Body.**.ExpectedReturnType => DataType.Void;

= SourceInitializerDefinition.SelfParameter.**.FlowStateBefore() => Self.FlowStateBefore();
= SourceInitializerDefinition.Parameters[0].**.FlowStateBefore()
    => SelfParameter.FlowStateAfter;
= SourceInitializerDefinition.Parameters[index].**.FlowStateBefore()
    => Parameters[index - 1].FlowStateAfter;
= SourceInitializerDefinition.Body.**.FlowStateBefore()
    => Parameters.LastOrDefault()?.FlowStateAfter ?? SelfParameter.FlowStateAfter;
= SourceInitializerDefinition.Body.**.ExpectedReturnType => DataType.Void;

= FieldDefinition.↑.Diagnostics;
// Null is the signal that this is a field initializer and not a method body
= FieldDefinition.Initializer.**.ExpectedReturnType => null;

= AssociatedFunctionDefinition.Parameters[0].**.FlowStateBefore()
    => Self.FlowStateBefore();
= AssociatedFunctionDefinition.Parameters[index].**.FlowStateBefore()
    => Parameters[index - 1].FlowStateAfter;
= AssociatedFunctionDefinition.Body.**.FlowStateBefore()
    => Parameters.LastOrDefault()?.FlowStateAfter ?? Self.FlowStateBefore();
= AssociatedFunctionDefinition.Body.ExpectedType => Type.Return.Type;
= AssociatedFunctionDefinition.Body.**.ExpectedReturnType => Type.Return.Type;

// ---------- Control Flow Expressions
↓ ReturnExpression.ExpectedReturnType: `DataType`?;
