◊namespace Azoth.Tools.Bootstrap.Compiler.Semantics.Types;
◊name DefinitionTypesAspect;
◊using Azoth.Tools.Bootstrap.Compiler.Types.Declared;

// ↓ ↑ ⮡ ✎

// ---------- Definitions
= ConcreteInvocableDefinition.Body.**.FlowStateBefore()
    => Parameters.LastOrDefault()?.FlowStateAfter ?? Self.FlowStateBefore();
= ConcreteInvocableDefinition.Parameters[0].**.FlowStateBefore()
    => Self.FlowStateBefore();
= ConcreteInvocableDefinition.Parameters[index].**.FlowStateBefore()
    => Parameters[index - 1].FlowStateAfter;

// ---------- Function Definition
= FunctionDefinition.Body.ExpectedType => Type.Return.Type;
= FunctionDefinition.Body.**.ExpectedReturnType => Type.Return.Type;

// ---------- Type Definitions
= TypeDefinition.*.**.ContainingDeclaredType;

// ---------- Type Definition Parts
↓ GenericParameter.ContainingDeclaredType: `IDeclaredUserType`;

// ---------- Member Definitions
↓ AbstractMethodDefinition.ContainingDeclaredType: `IDeclaredUserType`;

// ---------- Parameters
↓ SelfParameter.ContainingDeclaredType: `IDeclaredUserType`;
