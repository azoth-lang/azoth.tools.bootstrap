◊namespace Azoth.Tools.Bootstrap.Compiler.Semantics.Structure;
◊name ContextAspect;
◊using Azoth.Tools.Bootstrap.Compiler.Core.Code;

// ↓ ⟳ ↑ ⮡ ↗↖ →*← ✎

// TODO exposing the containing declaration to child nodes risks coupling. Maybe instead it should
// inherit specific properties as needed.

// ---------- Parent
↓ computed Child.PackageSymbol: `PackageSymbol`;

// ---------- Facets
= PackageFacet.*.**.Facet => this;

// ---------- Code Files
↓ computed Code.File: `CodeFile`;
↑ CompilationUnit.File: `CodeFile` => Syntax.File;
= CompilationUnit.*.**.File;
↓ computed CompilationUnit.ContainingDeclaration: PackageFacet;
= CompilationUnit.*.ContainingDeclaration => ImplicitNamespace;;

// ---------- Definitions
↓ Definition.Facet: PackageFacet;

// ---------- Namespace Definitions
↓ computed NamespaceBlockDefinition.ContainingDeclaration: NamespaceDefinition;
= NamespaceBlockDefinition.*.ContainingDeclaration;
= NamespaceDefinition.*.ContainingDeclaration => Self;

// ---------- Type Definitions
= TypeDefinition.*.**.ContainingTypeDefinition => this;

// ---------- Type Definition Parts
↓ computed GenericParameter.ContainingDeclaration: OrdinaryTypeDeclaration;

// ---------- Type Member Definitions
↓ computed AlwaysTypeMemberDefinition.ContainingDeclaration: OrdinaryTypeDeclaration;

// ---------- Member Definitions
↓ InitializerDefinition.ContainingTypeDefinition: TypeDefinition;

// ---------- Parameters
↓ SelfParameter.ContainingTypeDefinition: TypeDefinition;
↓ FieldParameter.ContainingTypeDefinition: TypeDefinition;

// ---------- Name Expressions
↓ InstanceExpression.ContainingDeclaration: ExecutableDefinition;

// -------------------------------------------------------------------------------------------------
// Declarations
// -------------------------------------------------------------------------------------------------

// ---------- Facet Declarations
= PackageFacetDeclaration.*.**.PackageSymbol => Self.PackageSymbol;
= PackageFacetDeclaration.*.ContainingDeclaration => this;
↓ computed PackageFacetChildDeclaration.Facet: PackageFacetDeclaration;

// ---------- Declarations
↓ computed Declaration.ContainingDeclaration: SymbolDeclaration;

// ---------- Function Declarations
↓ computed FunctionDeclaration.ContainingDeclaration: NamespaceDeclaration;

// ---------- Type Declarations
= TypeDeclaration.*.**.ContainingDeclaration => this;

// ---------- Type Declaration Parts
↓ computed GenericParameterDeclaration.ContainingDeclaration: OrdinaryTypeDeclaration;
↓ computed ImplicitSelfDeclaration.ContainingDeclaration: NonVariableTypeDeclaration;

// ---------- Type Member Declarations
= MethodDeclaration.*.**.ContainingDeclaration => this;
= InitializerDeclaration.*.**.ContainingDeclaration => this;
↓ FieldDeclaration.ContainingDeclaration: TypeDeclaration;
↓ computed AlwaysTypeMemberDeclaration.ContainingDeclaration: TypeDeclaration;

// -------------------------------------------------------------------------------------------------
// Symbol Nodes
// -------------------------------------------------------------------------------------------------

// ---------- Facets
= PackageFacetSymbol.*.**.Facet => this;
