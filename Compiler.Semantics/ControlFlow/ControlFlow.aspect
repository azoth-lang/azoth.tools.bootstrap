◊namespace Azoth.Tools.Bootstrap.Compiler.Semantics.ControlFlow;
◊name ControlFlowAspect;

// ↓ ↑ ⮡ ✎

// ---------- Definitions
↑ child eager ExecutableDefinition.Entry: Entry;
= ExecutableDefinition.Entry;
= ExecutableDefinition.*.**.ControlFlowEntry() => Entry;
↑ child eager ExecutableDefinition.Exit: Exit;
= ExecutableDefinition.Exit;
= ExecutableDefinition.*.**.ControlFlowExit() => Exit;
= ConcreteInvocableDefinition.Entry.ControlFlowFollowing();
= ConcreteInvocableDefinition.Body.**.ControlFlowFollowing()
    => ControlFlowSet.CreateNormal(Exit);
= FieldDefinition.Entry.ControlFlowFollowing()
    => ControlFlowSet.CreateNormal(Initializer ?? (IControlFlowNode)Exit);
= FieldDefinition.Initializer.ControlFlowFollowing()
    => ControlFlowSet.CreateNormal(Exit);

// ---------- Control Flow
↓ ControlFlow.ControlFlowEntry(): Entry;

/// <summary>
/// The control flow nodes that follow this node based on the context.
/// </summary>
/// <remarks>This is an inherited property.</remarks>
↓ ControlFlow.ControlFlowFollowing(): `ControlFlowSet`;

// ---------- Control Flow Expressions
↓ ReturnExpression.ControlFlowExit(): Exit;
