◊namespace Azoth.Tools.Bootstrap.Compiler.Semantics.Antetypes;
◊name DefinitionAntetypesAspect;
◊using Azoth.Tools.Bootstrap.Compiler.Antetypes;

// ↓ ↑ ⮡ ✎

// ---------- Function Definition
// TODO it would be good to refactor to not depend on Type
= FunctionDefinition.Body.ExpectedAntetype => Type.Return.Type.ToAntetype();

// ---------- Member Definitions
= StandardMethodDefinition.Body.ExpectedAntetype => Self.MethodGroupType.Return.Type.ToAntetype();
↑ FieldDefinition.BindingAntetype: `IMaybeAntetype`;
