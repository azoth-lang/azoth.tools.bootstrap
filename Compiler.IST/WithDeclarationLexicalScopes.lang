◊name WithDeclarationLexicalScopes;
◊extends WithNamespaceSymbols;
◊using Azoth.Tools.Bootstrap.Compiler.Core;
◊using Azoth.Tools.Bootstrap.Compiler.CST;
◊using Azoth.Tools.Bootstrap.Compiler.LexicalScopes;
◊using Azoth.Tools.Bootstrap.Compiler.Names;
◊using Azoth.Tools.Bootstrap.Compiler.Symbols;
◊using Azoth.Tools.Bootstrap.Compiler.Types;
◊using Azoth.Tools.Bootstrap.Compiler.Types.Capabilities;
◊using Azoth.Tools.Bootstrap.Framework;

*Package = +LexicalScope:`PackageReferenceScope`;
*CompilationUnit = +LexicalScope:`DeclarationScope`;

// ---------- Declarations
*Declaration = +ContainingScope:`DeclarationLexicalScope`;
*NamespaceDeclaration = +NewScope:`DeclarationScope`;

// ---------- Type Declarations
*TypeDeclaration = +NewScope:`DeclarationScope`;

// ---------- Type Declaration Parts
*UnresolvedSupertypeName = +ContainingScope:`DeclarationLexicalScope`;

// ---------- Unresolved Types
// TODO isn't this going to make it want to apply this to types inside of method bodies?
*UnresolvedTypeName = +ContainingScope:`DeclarationLexicalScope`;
