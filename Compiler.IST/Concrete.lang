◊name Concrete;
◊namespace Azoth.Tools.Bootstrap.Compiler.IST;
◊list IFixedList;
◊using Azoth.Tools.Bootstrap.Compiler.Core;
◊using Azoth.Tools.Bootstrap.Compiler.CST;
◊using Azoth.Tools.Bootstrap.Compiler.Names;
◊using Azoth.Tools.Bootstrap.Compiler.Symbols;
◊using Azoth.Tools.Bootstrap.Framework;

Package = Syntax:`IPackageSyntax` Symbol:`PackageSymbol` References:PackageReference*
    CompilationUnits:CompilationUnit* TestingCompilationUnits:CompilationUnit*;

// TODO add Syntax:`PackageReferenceSyntax` IsTrusted:`bool` once other layers support it
PackageReference = AliasOrName:`IdentifierName` Package:`AST.Package`;

CompilationUnit <: Code = Syntax:`ICompilationUnitSyntax` File:`CodeFile` ImplicitNamespaceName:`NamespaceName`
    UsingDirectives:UsingDirective* Declarations:NamespaceMemberDeclaration*;

UsingDirective <: Code = Syntax:`IUsingDirectiveSyntax` Name:`NamespaceName`;

Code = Syntax:`ISyntax`;


// ---------- Declarations
Declaration <: Code = Syntax:`IDeclarationSyntax`;
NamespaceMemberDeclaration: Declaration;
NamespaceDeclaration: Declaration <: NamespaceMemberDeclaration = Syntax:`INamespaceDeclarationSyntax`
    UsingDirectives:UsingDirective* Declarations:NamespaceMemberDeclaration*;

// ---------- Type Declarations
TypeDeclaration: Declaration <: NamespaceMemberDeclaration, TypeMemberDeclaration = Syntax:`ITypeDeclarationSyntax`;
ClassDeclaration: TypeDeclaration = Syntax:`IClassDeclarationSyntax` IsAbstract:`bool` Members:ClassMemberDeclaration*;
StructDeclaration: TypeDeclaration = Syntax:`IStructDeclarationSyntax` Members:StructMemberDeclaration*;
TraitDeclaration: TypeDeclaration = Syntax:`ITraitDeclarationSyntax` Members:TraitMemberDeclaration*;

// ---------- Type Member Declarations (i.e. declarations that can be contained in a type)
TypeMemberDeclaration: Declaration = Syntax:`IDeclarationSyntax`;
ClassMemberDeclaration: TypeMemberDeclaration;
TraitMemberDeclaration: TypeMemberDeclaration;
StructMemberDeclaration: TypeMemberDeclaration;

// ---------- Invocable Declarations
FunctionDeclaration: Declaration <: NamespaceMemberDeclaration, TypeMemberDeclaration = Syntax:`IFunctionDeclarationSyntax`;
